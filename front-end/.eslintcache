[{"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\index.js":"1","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\PrivateRoute\\PrivateRoute.js":"2","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\PrivateRoute\\AuthRoutes.js":"3","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\layouts\\Admin.js":"4","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\layouts\\Auth.js":"5","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\Navbars\\AuthNavbar.js":"6","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\Footers\\AuthFooter.js":"7","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\Navbars\\AdminNavbar.js":"8","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\network\\ApiAxios.js":"9","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\config.js":"10","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\Footers\\AdminFooter.js":"11","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\Sidebar\\Sidebar.js":"12","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\routes.js":"13","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\ConfirmEmail.js":"14","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\EditProfile.js":"15","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\UsersTable.js":"16","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\ResetPassword.js":"17","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\ConfirmPassword.js":"18","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\ResetPasswordSuccess.js":"19","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\Headers\\Header.js":"20","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\Headers\\EditHeader.js":"21","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\Headers\\UserHeader.js":"22","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\Index.js":"23","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\variables\\charts.js":"24","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\Profile.js":"25","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\Maps.js":"26","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\Register.js":"27","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\Login.js":"28","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\Icons.js":"29","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\Tables.js":"30"},{"size":1407,"mtime":1638104584316,"results":"31","hashOfConfig":"32"},{"size":378,"mtime":1612253580000,"results":"33","hashOfConfig":"32"},{"size":378,"mtime":1612253580000,"results":"34","hashOfConfig":"32"},{"size":2544,"mtime":1638105003976,"results":"35","hashOfConfig":"32"},{"size":3091,"mtime":1638107683629,"results":"36","hashOfConfig":"32"},{"size":3847,"mtime":1638104838471,"results":"37","hashOfConfig":"32"},{"size":2889,"mtime":1612253580000,"results":"38","hashOfConfig":"32"},{"size":4340,"mtime":1638138058234,"results":"39","hashOfConfig":"32"},{"size":1750,"mtime":1638178327323,"results":"40","hashOfConfig":"32"},{"size":201,"mtime":1638174194322,"results":"41","hashOfConfig":"32"},{"size":2852,"mtime":1612253580000,"results":"42","hashOfConfig":"32"},{"size":10774,"mtime":1638104947997,"results":"43","hashOfConfig":"32"},{"size":3423,"mtime":1638107826512,"results":"44","hashOfConfig":"32"},{"size":1404,"mtime":1612253580000,"results":"45","hashOfConfig":"32"},{"size":6324,"mtime":1638132516289,"results":"46","hashOfConfig":"32"},{"size":2075,"mtime":1638133069764,"results":"47","hashOfConfig":"32"},{"size":4563,"mtime":1638126815888,"results":"48","hashOfConfig":"32"},{"size":4333,"mtime":1612253580000,"results":"49","hashOfConfig":"32"},{"size":869,"mtime":1612253580000,"results":"50","hashOfConfig":"32"},{"size":6461,"mtime":1612253580000,"results":"51","hashOfConfig":"32"},{"size":2467,"mtime":1638107611783,"results":"52","hashOfConfig":"32"},{"size":2435,"mtime":1638107655235,"results":"53","hashOfConfig":"32"},{"size":12410,"mtime":1638108338931,"results":"54","hashOfConfig":"32"},{"size":10649,"mtime":1612253580000,"results":"55","hashOfConfig":"32"},{"size":13209,"mtime":1638132131853,"results":"56","hashOfConfig":"32"},{"size":3466,"mtime":1638133150833,"results":"57","hashOfConfig":"32"},{"size":10697,"mtime":1638173821322,"results":"58","hashOfConfig":"32"},{"size":6401,"mtime":1638126344385,"results":"59","hashOfConfig":"32"},{"size":121772,"mtime":1638108250256,"results":"60","hashOfConfig":"32"},{"size":71510,"mtime":1638108289600,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1584uk",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\index.js",[],["132","133"],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\PrivateRoute\\PrivateRoute.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\PrivateRoute\\AuthRoutes.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\layouts\\Admin.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\layouts\\Auth.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\Navbars\\AuthNavbar.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\Footers\\AuthFooter.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\Navbars\\AdminNavbar.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\network\\ApiAxios.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\config.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\Footers\\AdminFooter.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\routes.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\ConfirmEmail.js",["134"],"import React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport {confirmRegister} from \"../../network/ApiAxios\";\nimport {Card, CardBody, Col} from \"reactstrap\";\n\nconst ConfirmEmail = props => {\n\n    const {id} = useParams();\n    const [valid, setValid] = useState(true);\n\n    useEffect(() => {\n        if (!id) {\n            setValid(false);\n        } else {\n            const runAsync = async () => {\n                const response = await confirmRegister(id);\n                const {data} = response;\n                console.log(data);\n                if (!data.success) {\n                    setValid(false);\n                } else {\n                    setTimeout(() => {\n                        props.history.push('/auth/login');\n                    }, 5000);\n                }\n            }\n            runAsync();\n        }\n    }, [])\n\n    return (\n        <>\n            <Col lg=\"6\" md=\"8\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <div className=\"text-center mb-4\">\n                            <h1>{valid ? \"Email confirmed! You will be redirected to login...\" : \"Something went wrong!\"}</h1>\n                        </div>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    )\n};\n\nexport default ConfirmEmail;\n","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\EditProfile.js",["135"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, {useEffect, useState} from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Container,\n    Row,\n    Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"../../components/Headers/UserHeader.js\";\nimport EditHeader from \"../../components/Headers/EditHeader\";\nimport {edit} from \"../../network/ApiAxios\";\n\nconst EditProfile = props => {\n\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n\n    const [name, setName] = useState(user.name);\n    const [email, setEmail] = useState(user.email);\n    const [isTestUser, setIsTestUser] = useState(false);\n\n    useEffect(() => {\n        if (JSON.parse(localStorage.getItem(\"user\")).email === \"test@test.com\") {\n            setIsTestUser(true);\n        }\n    }, []);\n\n    const editUser = async () => {\n        const response = await edit(user._id, name, email);\n        const { data } = response;\n        if (data.ok) {\n            user = data.updatedUser;\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            props.history.push(\"/admin/user-profile\");\n        }\n    }\n\n    return (\n        <>\n            <EditHeader/>\n            {/* Page content */}\n            <Container className=\"mt--7\" fluid>\n                <Row>\n                    <div className=\"col\">\n                        <Card className=\"bg-secondary shadow\">\n                            <CardHeader className=\"bg-white border-0\">\n                                <Row className=\"align-items-center\">\n                                    <Col xs=\"8\">\n                                        <h3 className=\"mb-0\">My account</h3>\n                                        {isTestUser ? <h5>You are not allowed to edit the test user. Create another user to test this functionality</h5> : null}\n                                    </Col>\n                                    <Col className=\"text-right\" xs=\"4\">\n                                        <Button\n                                            color=\"primary\"\n                                            href=\"#pablo\"\n                                            onClick={editUser}\n                                            size=\"sm\"\n                                            disabled={isTestUser}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <h6 className=\"heading-small text-muted mb-4\">\n                                        User information\n                                    </h6>\n                                    <div className=\"pl-lg-4\">\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-username\"\n                                                    >\n                                                        Username\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        value={name}\n                                                        id=\"input-username\"\n                                                        placeholder=\"Username\"\n                                                        onChange={e => setName(e.target.value)}\n                                                        type=\"text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-email\"\n                                                    >\n                                                        Email address\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-email\"\n                                                        disabled\n                                                        value={email}\n                                                        onChange={e => setEmail(e.target.value)}\n                                                        type=\"email\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </Row>\n            </Container>\n        </>\n);\n}\n\nexport default EditProfile;\n","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\UsersTable.js",["136"],"import React, {useEffect, useState} from 'react';\nimport Header from \"../../components/Headers/Header\";\nimport {\n    Card,\n    CardHeader,\n    Container,\n    Row,\n    Table,\n} from \"reactstrap\";\n// import {getAll} from \"../../network/ApiAxios\";\n\nconst UsersTable = () => {\n\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        const runAsync = async () => {\n            // const response = await getAll();\n            // const {data} = response;\n            // console.log(data.users);\n            // if (data.success) {\n            //     setUsers(data.users);\n            // }\n        }\n        runAsync();\n    }, []);\n\n    return (\n        <>\n            <Header/>\n            <Container>\n                <Row>\n                    <div className=\"col\">\n                        <Card className=\"shadow\">\n                            <CardHeader className=\"border-0\">\n                                <h3 className=\"mb-0\">Users</h3>\n                            </CardHeader>\n                            <Table className=\"align-items-center table-flush\" responsive>\n                                <thead className=\"thead-light\">\n                                <tr>\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">Email</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {users.map(user => (\n                                    <tr key={user.email}>\n                                        <th scope=\"row\">\n                                            {user.name}\n                                        </th>\n                                        <td>{user.email}</td>\n                                    </tr>\n                                ))}\n                                </tbody>\n                            </Table>\n                        </Card>\n                    </div>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\nexport default UsersTable;\n","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\ResetPassword.js",["137","138","139"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { forgotPassword, login } from \"../../network/ApiAxios\";\nimport Toast from \"react-bootstrap/Toast\";\nimport config from \"../../config\";\n\nconst ResetPassword = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState(\n    \"Email sent! Check it to reset your password.\"\n  );\n  const [userID, setUserID] = useState(null);\n\n  const sendEmail = async () => {\n    try {\n      const response = await forgotPassword(email);\n      const { data } = response;\n      if (data.success) {\n        console.log(data);\n        if (config.DEMO) {\n          setToastMessage(\n            \"This is a demo, so we will not send you an email. Instead, click on this link to reset your password:\"\n          );\n          setUserID(data.userID);\n        }\n        setShowToast(true);\n      } else {\n        setError(data.message);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <>\n      <div\n        aria-live='polite'\n        aria-atomic='true'\n        style={{\n          position: \"fixed\",\n          minHeight: \"100px\",\n          width: \"35%\",\n          right: 10,\n          bottom: 100,\n          zIndex: 50,\n        }}>\n        <Toast\n          style={{\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            backgroundColor: \"white\",\n            padding: 10,\n            borderRadius: 10,\n          }}\n          onClose={() => setShowToast(false)}\n          show={showToast}\n          delay={5000}\n          autohide={!config.DEMO}>\n          <Toast.Header>\n            <img\n              style={{ height: \"30px\", width: \"100px\" }}\n              src={require(\"../../assets/img/brand/argon-react.png\").default}\n              alt='...'\n            />\n          </Toast.Header>\n          <Toast.Body>\n            {toastMessage}\n            {config.DEMO ? (\n              <a href={config.DOMAIN_NAME + \"/auth/confirm-password/\" + userID}>\n                {config.DOMAIN_NAME + \"/auth/confirm-password/\" + userID}\n              </a>\n            ) : null}\n          </Toast.Body>\n        </Toast>\n      </div>\n      <Col lg='5' md='7'>\n        <Card className='bg-secondary shadow border-0'>\n          <CardBody className='px-lg-5 py-lg-5'>\n            <Form role='form'>\n              <FormGroup className='mb-3'>\n                <InputGroup className='input-group-alternative'>\n                  <InputGroupAddon addonType='prepend'>\n                    <InputGroupText>\n                      <i className='ni ni-email-83' />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder='Email'\n                    type='email'\n                    autoComplete='email'\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              {error ? (\n                <div className='text-muted font-italic'>\n                  <small>\n                    error:{\" \"}\n                    <span className='text-red font-weight-700'>{error}</span>\n                  </small>\n                </div>\n              ) : null}\n              <div className='text-center'>\n                <Button\n                  className='my-4'\n                  color='primary'\n                  type='button'\n                  onClick={sendEmail}>\n                  Reset Password\n                </Button>\n              </div>\n            </Form>\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n};\n\nexport default ResetPassword;\n","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\ConfirmPassword.js",["140","141","142","143","144"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, {useState} from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n} from \"reactstrap\";\nimport {confirmReset, forgotPassword, login} from \"../../network/ApiAxios\";\nimport Toast from \"react-bootstrap/Toast\";\nimport {useParams} from \"react-router-dom\";\n\nconst ConfirmPassword = props => {\n\n    const {id} = useParams();\n\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const confirm = async () => {\n        if (password !== confirmPassword) {\n            setError(\"Passwords have to match\");\n            return;\n        }\n        const response = await confirmReset(id, password);\n        const {data} = response;\n        if (data.success) {\n            props.history.push(\"/auth/reset-success\");\n        } else {\n            setError(data.msg);\n        }\n    }\n\n    return (\n        <>\n            <Col lg=\"5\" md=\"7\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <Form role=\"form\">\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\" value={password}\n                                           onChange={e => setPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Confirm Password\" type=\"password\" autoComplete=\"new-password\" value={confirmPassword}\n                                           onChange={e => setConfirmPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            {error ?\n                                <div className=\"text-muted font-italic\">\n                                    <small>\n                                        error:{\" \"}\n                                        <span className=\"text-red font-weight-700\">{error}</span>\n                                    </small>\n                                </div> : null }\n                            <div className=\"text-center\">\n                                <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={confirm}>\n                                    Reset Password\n                                </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n}\n\nexport default ConfirmPassword;\n","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\ResetPasswordSuccess.js",["145","146","147","148"],"import React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport {confirmRegister} from \"../../network/ApiAxios\";\nimport {Card, CardBody, Col} from \"reactstrap\";\n\nconst ResetPasswordSuccess = props => {\n\n    useEffect(() => {\n        setTimeout(() => {\n            props.history.push(\"/auth/login\");\n        }, 5000);\n    }, [])\n\n    return (\n        <>\n            <Col lg=\"6\" md=\"8\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <div className=\"text-center mb-4\">\n                            <h1>Password reset confirmed! You will be redirected to login...</h1>\n                        </div>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    )\n};\n\nexport default ResetPasswordSuccess;\n","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\Headers\\Header.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\Headers\\EditHeader.js",[],["149","150"],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\components\\Headers\\UserHeader.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\Index.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\variables\\charts.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\Profile.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\Maps.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\Register.js",["151","152"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Toast from \"react-bootstrap/Toast\";\nimport { cloudflare, register } from \"../../network/ApiAxios\";\nimport config from \"../../config\";\n\nconst Register = () => {\n  const [name, setName] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [checkbox, setCheckbox] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState(\n    \"Email sent! Check it to reset your password.\"\n  );\n  const [userID, setUserID] = useState(null);\n  const locator = async () => {\n    try {\n      const locationResponse = await cloudflare();\n      const { data } = locationResponse;\n      console.log(data);\n      setCountry(data.country);\n      setCity(data.city);\n      if(country&&city){\n        setToastMessage(\n          `This is a demo, so we will send you an email. Instead, Check Your Mail:Country:${country} city:${city}`\n        );\n        setShowToast(true);\n      }\n     \n    } catch (error) {\n      setToastMessage(\n        `Error Accessing Location!${error.message}`\n      );\n      setShowToast(true);\n    }\n  };\n  const registerUser = async () => {\n    try {\n      if (!(name && email && password && confirmPassword && checkbox)) {\n        setError(\n          \"Make sure to fill all the inputs and agree to the privacy policy\"\n        );\n        return;\n      }\n\n      if (password !== confirmPassword) {\n        setError(\"Passwords do not match\");\n        return;\n      }\n      // const locationResponse = await cloudflare();\n      // console.log(locationResponse);\n      const response = await register(name, email, password);\n\n      // const { country, city } = locationResponse;\n      // if (country && city) {\n      //   setCountry(country);\n      //   setCity(city);\n      //   setShowToast(true);\n      //   localStorage.setItem(JSON.stringify(locationResponse));\n      // }\n      const { data } = response;\n      if (data.error) {\n        throw new Error(data.error);\n      }\n      if (data.url) {\n        setUrl(data.url);\n      }\n      if (!data.success) {\n        setError(data.error);\n      }\n      // if (config.DEMO) {\n      //   setToastMessage(\n      //     `This is a demo, so we will not send you an email. Instead, click on this link to verify your account:`\n      //   );\n      // }\n      setError(\"\");\n      setName(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setCheckbox(false);\n      setCountry(\"\");\n      setCity(\"\");\n      setShowToast(true);\n      locator();\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <>\n      <div\n        aria-live='polite'\n        aria-atomic='true'\n        style={{\n          position: \"fixed\",\n          minHeight: \"100px\",\n          width: \"35%\",\n          right: 10,\n          bottom: 80,\n          zIndex: 50,\n        }}>\n        <Toast\n          style={{\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            backgroundColor: \"white\",\n            padding: 10,\n            borderRadius: 10,\n          }}\n          onClose={() => setShowToast(false)}\n          show={showToast}\n          delay={10000}\n          autohide={!config.DEMO}>\n          <Toast.Header>\n            <img\n              style={{ height: \"30px\", width: \"100px\" }}\n              src={require(\"../../assets/img/brand/argon-react.png\").default}\n              alt='...'\n            />\n          </Toast.Header>\n          <Toast.Body>\n            {toastMessage}\n            {url ? (\n              <>\n                <a href={url}>{url}</a>\n              </>\n            ) : null}\n          </Toast.Body>\n        </Toast>\n      </div>\n      <Col lg='6' md='8'>\n        <Card className='bg-secondary shadow border-0'>\n          <CardHeader className='bg-transparent pb-5'>\n            <div className='text-muted text-center mt-2 mb-4'>\n              <small>Sign up with</small>\n            </div>\n            <div className='text-center'>\n              <Button\n                className='btn-neutral btn-icon mr-4'\n                color='default'\n                href='#pablo'\n                onClick={(e) => e.preventDefault()}>\n                <span className='btn-inner--icon'>\n                  <img\n                    alt='...'\n                    src={\n                      require(\"../../assets/img/icons/common/github.svg\")\n                        .default\n                    }\n                  />\n                </span>\n                <span className='btn-inner--text'>Github</span>\n              </Button>\n              <Button\n                className='btn-neutral btn-icon'\n                color='default'\n                href='#pablo'\n                onClick={(e) => e.preventDefault()}>\n                <span className='btn-inner--icon'>\n                  <img\n                    alt='...'\n                    src={\n                      require(\"../../assets/img/icons/common/google.svg\")\n                        .default\n                    }\n                  />\n                </span>\n                <span className='btn-inner--text'>Google</span>\n              </Button>\n            </div>\n          </CardHeader>\n          <CardBody className='px-lg-5 py-lg-5'>\n            <div className='text-center text-muted mb-4'>\n              <small>Or sign up with credentials</small>\n            </div>\n            <Form role='form'>\n              <FormGroup>\n                <InputGroup className='input-group-alternative mb-3'>\n                  <InputGroupAddon addonType='prepend'>\n                    <InputGroupText>\n                      <i className='ni ni-hat-3' />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder='Name'\n                    type='text'\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <InputGroup className='input-group-alternative mb-3'>\n                  <InputGroupAddon addonType='prepend'>\n                    <InputGroupText>\n                      <i className='ni ni-email-83' />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder='Email'\n                    type='email'\n                    autoComplete='new-email'\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <InputGroup className='input-group-alternative'>\n                  <InputGroupAddon addonType='prepend'>\n                    <InputGroupText>\n                      <i className='ni ni-lock-circle-open' />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder='Password'\n                    type='password'\n                    autoComplete='new-password'\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <InputGroup className='input-group-alternative'>\n                  <InputGroupAddon addonType='prepend'>\n                    <InputGroupText>\n                      <i className='ni ni-lock-circle-open' />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder='Confirm Password'\n                    type='password'\n                    autoComplete='new-password'\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              {error ? (\n                <div className='text-muted font-italic'>\n                  <small>\n                    error:{\" \"}\n                    <span className='text-red font-weight-700'>{error}</span>\n                  </small>\n                </div>\n              ) : null}\n              <Row className='my-4'>\n                <Col xs='12'>\n                  <div className='custom-control custom-control-alternative custom-checkbox'>\n                    <input\n                      className='custom-control-input'\n                      id='customCheckRegister'\n                      type='checkbox'\n                      checked={checkbox}\n                      onChange={() => setCheckbox(!checkbox)}\n                    />\n                    <label\n                      className='custom-control-label'\n                      htmlFor='customCheckRegister'>\n                      <span className='text-muted'>\n                        I agree with the{\" \"}\n                        <a href='#pablo' onClick={(e) => e.preventDefault()}>\n                          Privacy Policy\n                        </a>\n                      </span>\n                    </label>\n                  </div>\n                </Col>\n              </Row>\n              <div className='text-center'>\n                <Button\n                  onClick={registerUser}\n                  className='mt-4'\n                  color='primary'\n                  type='button'>\n                  Create account\n                </Button>\n              </div>\n            </Form>\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n};\n\nexport default Register;\n","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\Login.js",["153","154"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { login } from \"../../network/ApiAxios\";\n\nconst Login = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const tryLogin = async () => {\n    try {\n      const response = await login(email, password);\n      const { data } = response;\n      if (data.success) {\n        setError(\"\");\n        localStorage.setItem(\"token\", data.accessToken);\n        localStorage.setItem(\"user\", JSON.stringify(data.user));\n        props.history.push(\"/\");\n      } else {\n        setPassword(\"\");\n        setError(data.msg);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <>\n      <Col lg='5' md='7'>\n        <Card className='bg-secondary shadow border-0'>\n          <CardHeader className='bg-transparent pb-5'>\n            <div className='text-muted text-center mt-2 mb-3'>\n              <small>Sign in with</small>\n            </div>\n            <div className='btn-wrapper text-center'>\n              <Button\n                className='btn-neutral btn-icon'\n                color='default'\n                href='#pablo'\n                onClick={(e) => e.preventDefault()}>\n                <span className='btn-inner--icon'>\n                  <img\n                    alt='...'\n                    src={\n                      require(\"../../assets/img/icons/common/github.svg\")\n                        .default\n                    }\n                  />\n                </span>\n                <span className='btn-inner--text'>Github</span>\n              </Button>\n              <Button\n                className='btn-neutral btn-icon'\n                color='default'\n                href='#pablo'\n                onClick={(e) => e.preventDefault()}>\n                <span className='btn-inner--icon'>\n                  <img\n                    alt='...'\n                    src={\n                      require(\"../../assets/img/icons/common/google.svg\")\n                        .default\n                    }\n                  />\n                </span>\n                <span className='btn-inner--text'>Google</span>\n              </Button>\n            </div>\n          </CardHeader>\n          <CardBody className='px-lg-5 py-lg-5'>\n            <div className='text-center text-muted mb-4'>\n              <small>Or sign in with credentials</small>\n            </div>\n            <Form role='form'>\n              <FormGroup className='mb-3'>\n                <InputGroup className='input-group-alternative'>\n                  <InputGroupAddon addonType='prepend'>\n                    <InputGroupText>\n                      <i className='ni ni-email-83' />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder='Email'\n                    type='email'\n                    autoComplete='email'\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <InputGroup className='input-group-alternative'>\n                  <InputGroupAddon addonType='prepend'>\n                    <InputGroupText>\n                      <i className='ni ni-lock-circle-open' />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder='Password'\n                    type='password'\n                    autoComplete='password'\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              {/*<div className=\"custom-control custom-control-alternative custom-checkbox\">*/}\n              {/*    <input*/}\n              {/*        className=\"custom-control-input\"*/}\n              {/*        id=\" customCheckLogin\"*/}\n              {/*        type=\"checkbox\"*/}\n              {/*    />*/}\n              {/*    <label*/}\n              {/*        className=\"custom-control-label\"*/}\n              {/*        htmlFor=\" customCheckLogin\"*/}\n              {/*    >*/}\n              {/*        <span className=\"text-muted\">Remember me</span>*/}\n              {/*    </label>*/}\n              {/*</div>*/}\n              {error ? (\n                <div className='text-muted font-italic'>\n                  <small>\n                    error:{\" \"}\n                    <span className='text-red font-weight-700'>{error}</span>\n                  </small>\n                </div>\n              ) : null}\n              <div className='text-center'>\n                <Button\n                  className='my-4'\n                  color='primary'\n                  type='button'\n                  onClick={tryLogin}>\n                  Sign in\n                </Button>\n              </div>\n            </Form>\n          </CardBody>\n        </Card>\n        <Row className='mt-3'>\n          <Col xs='6'>\n            <a\n              className='text-light'\n              onClick={() => props.history.push(\"/auth/reset-password\")}>\n              <small>Forgot password?</small>\n            </a>\n          </Col>\n          <Col className='text-right' xs='6'>\n            <a\n              className='text-light'\n              onClick={() => props.history.push(\"/auth/register\")}>\n              <small>Create new account</small>\n            </a>\n          </Col>\n        </Row>\n      </Col>\n    </>\n  );\n};\n\nexport default Login;\n","C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\Icons.js",[],"C:\\Users\\alwi\\Downloads\\argon-dashboard-react-nodejs-main\\argon-dashboard-react-nodejs-main\\front-end\\src\\views\\examples\\Tables.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":29,"column":8,"nodeType":"161","endLine":29,"endColumn":10,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":34,"column":8,"nodeType":"165","messageId":"166","endLine":34,"endColumn":18},{"ruleId":"163","severity":1,"message":"167","line":14,"column":19,"nodeType":"165","messageId":"166","endLine":14,"endColumn":27},{"ruleId":"163","severity":1,"message":"168","line":24,"column":3,"nodeType":"165","messageId":"166","endLine":24,"endColumn":13},{"ruleId":"163","severity":1,"message":"169","line":32,"column":3,"nodeType":"165","messageId":"166","endLine":32,"endColumn":6},{"ruleId":"163","severity":1,"message":"170","line":35,"column":26,"nodeType":"165","messageId":"166","endLine":35,"endColumn":31},{"ruleId":"163","severity":1,"message":"168","line":24,"column":5,"nodeType":"165","messageId":"166","endLine":24,"endColumn":15},{"ruleId":"163","severity":1,"message":"169","line":32,"column":5,"nodeType":"165","messageId":"166","endLine":32,"endColumn":8},{"ruleId":"163","severity":1,"message":"171","line":35,"column":23,"nodeType":"165","messageId":"166","endLine":35,"endColumn":37},{"ruleId":"163","severity":1,"message":"170","line":35,"column":39,"nodeType":"165","messageId":"166","endLine":35,"endColumn":44},{"ruleId":"163","severity":1,"message":"172","line":36,"column":8,"nodeType":"165","messageId":"166","endLine":36,"endColumn":13},{"ruleId":"163","severity":1,"message":"173","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":35},{"ruleId":"163","severity":1,"message":"174","line":2,"column":10,"nodeType":"165","messageId":"166","endLine":2,"endColumn":19},{"ruleId":"163","severity":1,"message":"175","line":3,"column":9,"nodeType":"165","messageId":"166","endLine":3,"endColumn":24},{"ruleId":"159","severity":1,"message":"176","line":12,"column":8,"nodeType":"161","endLine":12,"endColumn":10,"suggestions":"177"},{"ruleId":"155","replacedBy":"178"},{"ruleId":"157","replacedBy":"179"},{"ruleId":"163","severity":1,"message":"180","line":53,"column":10,"nodeType":"165","messageId":"166","endLine":53,"endColumn":16},{"ruleId":"163","severity":1,"message":"181","line":53,"column":18,"nodeType":"165","messageId":"166","endLine":53,"endColumn":27},{"ruleId":"182","severity":1,"message":"183","line":175,"column":13,"nodeType":"184","endLine":177,"endColumn":74},{"ruleId":"182","severity":1,"message":"183","line":182,"column":13,"nodeType":"184","endLine":184,"endColumn":68},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["187"],"no-unused-vars","'UserHeader' is defined but never used.","Identifier","unusedVar","'setUsers' is assigned a value but never used.","'CardHeader' is defined but never used.","'Row' is defined but never used.","'login' is defined but never used.","'forgotPassword' is defined but never used.","'Toast' is defined but never used.","'useState' is defined but never used.","'useParams' is defined but never used.","'confirmRegister' is defined but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["188"],["185"],["186"],"'userID' is assigned a value but never used.","'setUserID' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [id, props.history]",{"range":"193","text":"194"},"Update the dependencies array to be: [props.history]",{"range":"195","text":"196"},[877,879],"[id, props.history]",[363,365],"[props.history]"]